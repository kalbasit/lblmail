<?php
/*
 *	vim:ft=php:fenc=UTF-8:ts=4:sts=0:sw=4:noexpandtab:foldmethod=marker:foldlevel=0:
 *
 * lblmail is a small utility written in PHP, it allow you to label emails based on
 * rules Ã  la procmail, the advantage over procmail is the ability to apply the label
 * to the given mail file, which means you can post-process the mail.
 *
 * Copyright (c) 2007 Wael Nasreddine <wael.nasreddine@gmail.com>
 *
 * This file is part of LblMail.
 *
 * LblMail is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LblMail is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LblMail.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

class Labels {

	/** The labels file */
	protected $_labelsFile = null;

	/** Labels file content */
	protected $_content = null;

	/** All labels */
	protected $_labels = array();

	public function __construct($labelsFile) {

		/** Sanity check */
		if(file_exists($labelsFile) === false) {
			touch($labelsFile);
		}

		/** record the path */
		$this->_labelsFile = $labelsFile;

		/** Extract content */
		$this->_extractContent();

		/** Extract labels from the labels file */
		$this->_extractLabels();
	}

	/**
	 * Extract contents
	 *
	 * @return void
	 */
	protected function _extractContent() {

		/** Open the file as read-only */
		$fd = fopen($this->_labelsFile, "r");

		/** Get the contents */
		$this->_content = fread($fd, filesize($this->_labelsFile));

		/** Close the file */
		fclose($fd);
	}

	/**
	 * Extract labels from the labels file
	 *
	 * @return void
	 */
	protected function _extractLabels() {

		/** get the lines */
		$lines = explode("\n", $this->_content);

		for ($i=0; $i < count($lines); $i++) {
			$line = trim($lines[$i]);

			$this->addLabel($line);
		}
	}

	public function addLabel($label) {

		if(is_array($label)) {
			foreach($label as $temp) {
				$this->_addLabel($temp);
			}
		} else {
			$this->_addLabel($label);
		}
	}

	protected function _addLabel($label) {

		if(in_array($label, $this->_labels) === false && !empty($label)) {
			$this->_labels[] = $label;
		}
	}

	public function save() {

		$labels = implode("\n", $this->_labels);

		/** Open the file in write mode */
		$fd = fopen($this->_labelsFile, "w");

		/** Write the content */
		fwrite($fd, $labels);

		/** close the file */
		fclose($fd);
	}

}
?>