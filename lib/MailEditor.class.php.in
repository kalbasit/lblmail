<?php
/*
 *	vim:ft=php:fenc=UTF-8:ts=4:sts=0:sw=4:noexpandtab:foldmethod=marker:foldlevel=0:
 *
 * lblmail is a small utility written in PHP, it allow you to label emails based on
 * rules Ã  la procmail, the advantage over procmail is the ability to apply the label
 * to the given mail file, which means you can post-process the mail.
 *
 * Copyright (c) 2007 Wael Nasreddine <wael.nasreddine@gmail.com>
 *
 * This file is part of LblMail.
 *
 * LblMail is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * LblMail is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with LblMail.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

class MailEditor {

	/** This represents the path to the mailFile */
	protected $_mailFile = null;

	/** this represents the contents of the email as is */
	protected $_content = null;

	/** This represents the header part of the mail */
	protected $_header = null;

	/** This represents the body part of the mail */
	protected $_body = null;

	/**
	 * Create an email editor object out of an email file (NOT an mbox file)
	 *
	 * @param string $mailFile The path to the mail file
	 * @return $this
	 */
	public function __construct($mailFile) {

		/** Sanity check */
		if(file_exists($mailFile) === false) {
			throw new Exception($mailFile . ' does not exist or can not be opened');
		}

		/** record the path */
		$this->_mailFile = $mailFile;

		/** Extract the content */
		$this->_extractContent();

		/** Extract the header and the body */
		$this->_extractHeaderBody();
	}

	/**
	 * Exctract the content of an email
	 *
	 * @return void
	 */
	protected function _extractContent() {

		/** Open the file as read-only */
		$fd = fopen($this->_mailFile, "r");

		/** Get the contents */
		$this->_content = fread($fd, filesize($this->_mailFile));

		/** Close the file */
		fclose($fd);
	}

	/**
	 * This functions extracts the mail header and body from $this->_content and record them in $this->_header and $this->_body
	 *
	 * @return void
	 */
	protected function _extractHeaderBody() {

	}

	/**
	 * This function is used to merge the header and body back in content
	 *
	 * @return void
	 */
	protected function _mergeHeaderBody() {}

	/**
	 * An accessor to $this->_content
	 *
	 * @return string
	 */
	public function getContent() {

		return $this->_content;
	}

	/**
	 * An accessor to $this->_header
	 *
	 * @return string
	 */
	public function getHeader() {

		return $this->_header;
	}

	/**
	 * An accessor to $this->_body
	 *
	 * @return string
	 */
	public function getBody() {

		return $this->_body;
	}

	/**
	 * Do given operations on the mail
	 *
	 * @param array $operations
	 * @return bool
	 */
	public function doOperations($operations) {}

	/**
	 * Save the mail to mailFile
	 *
	 * @return bool
	 */
	public function save() {}
}
?>